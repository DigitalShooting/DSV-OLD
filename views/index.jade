extends ./layout.jade

block title
	| DSV

block body
	table(ng-controller="lines")
		tr(ng-repeat="standLine in linesList" class="animate")
			td(ng-repeat="stand in standLine" class="animate")
				div(ng-controller="stand" stand="stand")
					div(class="standLabel")
						h1 {{stand.labelShort}}
					
					div(class="col-xs-5")
						target( zoomlevel="zoomlevel" serie="serie" selectedshotindex="selectedshotindex" scheibe="scheibe" probeecke="probeecke")
					div(class="col-xs-7")
						.col-xs-12
							h2 {{session.user.firstName}} {{session.user.lastName}}
							h4 {{session.user.verein}} {{session.user.manschaft}}
							br
							div(class="grayBoxp" ng-hide="empty")
								//- span(style='font-size:9vmin; float:left; margin-left:1vw; margin-top:-0.4vw; position:absolute; display:block; transform-origin: 50% 50%; -webkit-transform:rotate({{activeShot.winkel}}deg)' ng-bind-html="activeShot.pfeil")
								table
									tr
										td
											h1 {{activeShot.ring}} 
												//- small {{activeShot.teiler}} Teiler
										td
											h2 {{anzahlShots}}.
								
								table
									tr
										td
											h2 {{schnitt}} &Oslash;
										td
											h2 {{gesamt}} Ringe
							br
							table(class="table")
								tr
									td(ng-repeat="serieSum in serieSums track by $index" class="" )
										h2 {{serieSum}}
						
						
	script.
		var config = !{JSON.stringify(config)};
		
		angular.module('dsv.services.lines', ["btford.socket-io"])
		.factory('lines', ["socketFactory", function (socketFactory) {
			var lines = []
			
			function watch(stand){
				stand.socket.on("connect", function(){
					stand.isConnected = true
				})
				stand.socket.on("disconnect", function(){
					stand.isConnected = false
				})
			}
			
			for (var key in config.lines){
				var stand = config.lines[key]
				stand.socket = socketFactory({
					ioSocket: io.connect(stand.ip+":"+stand.port)
				})
				
				watch(stand)
				
				lines.push(stand)
			}
			
			return lines; 
		}])
		//- .factory('activelinesObj', ["lines", function (lines) {
		//- 	var activelinesObj = {
		//- 		updates: [],
		//- 	}
		//- 	
		//- 	var update = function(){
		//- 		activelinesObj.activelines = []
		//- 		for (var i in lines){
		//- 			if (lines[i].isConnected == true){
		//- 				activelinesObj.activelines.push(lines[i])
		//- 			}
		//- 		}
		//- 		activelinesObj.itemsPerLine = Math.pow(activelines.length, 0.5); 
		//- 	}
		//- 	
		//- 	
		//- 	
		//- 	for (i in lines){
		//- 		var stand = lines[i]
		//- 
		//- 		stand.socket.on("connect", function(){
		//- 			update()
		//- 			activelinesObj.update.forEach(function(callback){
		//- 				callback()
		//- 			})
		//- 		})
		//- 		stand.socket.on("disconnect", function(){
		//- 			update()
		//- 			activelinesObj.update.forEach(function(callback){
		//- 				callback()
		//- 			})
		//- 		})
		//- 	}
		//- 	
		//- 	
		//- 	
		//- 	
		//- 	return activelinesObj
		//- }])
		
		
		
		
		angular.module("dsv", [
			"dsv.services.grafik", "dsv.services.lines",
			"dsv.controllers.main",
			
			"ngAnimate",
		])
